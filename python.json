{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	"NotificationProperty": {
		"prefix": "lpropn",
		"body": [
			"# ${1:name} notification property.",
			"_${1:name} = ${2:init}",
			"@property",
			"def ${1:name}(self):",
			"    return self._${1:name}",
			"@${1:name}.setter",
			"def ${1:name}(self, value):",
			"    if self._${1:name} == value:",
			"        return",
			"    self._${1:name} = value",
			"    self.RaisePropertyChanged('')"
		],
		"description": "Notification property for livet package."
	},

	"DelegateCommand": {
		"prefix": "lvcomn",
		"body": [
			"# ${1:name} command.",
			"self.${1:name}Command = ViewModelCommand(self.${1:name})",
			"",
			"def ${1:name}(self):",
			"    pass"
		],
		"description": "Delegate command for livet package."
	}
}